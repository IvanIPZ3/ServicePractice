#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <stdbool.h>
#include <windows.h>
#include <math.h>

struct Account {
    char name[50];
    char email[50];
    char password[50];
};

struct Music {
    char musicname[50];
    float longseconds;
};

void RegistringAccount(struct Account *a) {

    char password2[50];

    fflush(stdin);  // Очищення вхідного буфера

    printf("\nВкажіть нікнейм: ");
    fgets(a->name, sizeof(a->name), stdin);
    a->name[strcspn(a->name, "\n")] = '\0';

    printf("\nВкажіть електронну пошту користувача: ");
    fgets(a->email, sizeof(a->email), stdin);
    a->email[strcspn(a->email, "\n")] = '\0';

    printf("\nВкажіть пароль: ");
    fgets(a->password, sizeof(a->password), stdin);
    a->password[strcspn(a->password, "\n")] = '\0';

    printf("\nПовторіть пароль: ");
    fgets(password2, sizeof(password2), stdin);
    password2[strcspn(password2, "\n")] = '\0';

    do {
        if (strcmp(a->password, password2) == 0) { // Перевірка пароля за допомогою strcmp()
            printf("Аккаунт зареєстровано\n");
        } else {
            printf("Паролі не збігаються\n");
            printf("\nВкажіть пароль: ");
            fgets(a->password, sizeof(a->password), stdin);

            printf("Повторіть пароль: ");
            fgets(password2, sizeof(password2), stdin);
        }
    } while (strcmp(a->password, password2) != 0);
}

void MusicList(const struct Music* songs, int size) {
    printf("Назва і автор пісні                               Довжина пісні\n");
    for (int i = 0; i < size; i++) {
        int minutes = (int)songs[i].longseconds / 60;
        int seconds = (int)songs[i].longseconds % 60;
        printf("%-50s %d:%02d\n", songs[i].musicname, minutes, seconds);
    }
}

void MusicSearch(const struct Music* songs, int size, const char* target) {
    bool found = false;

    for (int i = 0; i < size; i++) {
        if (strstr(songs[i].musicname, target) != NULL) {
            int minutes = (int)songs[i].longseconds / 60;
            int seconds = (int)songs[i].longseconds % 60;
            printf("Назва пісні: %s\n", songs[i].musicname);
            printf("Тривалість: %d:%02d\n", minutes, seconds);
            found = true;
        }
    }

    if (!found) {
        printf("Пісні з назвою, що містить '%s', не знайдено\n", target);
    }
}

void Delete_Account(struct Account *a, char password2[50])
{
    int choice = -1;

    printf("\nВи впевненні, що хочете видалити аккаунт? Ця дія є безповоротною! Так - 1 / Ні - 2");

    bool check = true;
    bool flag = true;

    do {
        do {
            printf("\n\nВиберіть опцію: ");

            // Перевірка на коректне введення
            if (scanf("%d", &choice) != 1) {
                printf("\nПомилкове введення. Спробуйте знову\n");

                // Очищення буферу вводу
                while (getchar() != '\n');

                // Продовження циклу з нового кроку
                continue;
            } else {
                check = false;
            }

            if (choice != 1 && choice != 2) {
                flag = true;
                printf("\nПомилкове введення. Спробуйте знову\n");
            } else {
                flag = false;
            }

        } while (check);
    } while (flag);

    switch (choice) {
        case 1:
            for (int i = 0; i < 50; i++) {
                a->name[i] = 0;
            }
            for (int i = 0; i < 50; i++) {
                a->email[i] = 0;
            }
            for (int i = 0; i < 50; i++) {
                a->password[i] = 0;
            }
            for (int i = 0; i < 50; i++) {
                password2[i] = 0;
            }
            printf("\nВаші дані були остаточно видалені!\n\n");
            break;
        case 2:
            printf("\nВи будете направлені у головне меню\n\n");
            break;
        default:
            break;
    }
}

void AccountData(struct Account *a){ // функція виведення даних про аккаунт
    if (a!=NULL){
    printf("Нікнейм: %s\n", a->name);
    printf("Електронна пошта: %s\n", a->email);
    }
    else
    printf("Аккаунт не зареєстровано");
}
int main() {
    SetConsoleCP(1251);
    SetConsoleOutputCP(1251);
    struct Music songs[] = {
        { "Kalush - Stefania", 179 },
        { "Kalush - Додому", 216 },
        { "Kalush - Файна", 156 },
        { "Kalush feat. Tember Blanche - Калуські вечорниці", 180 },
        { "Kalush - Зорі", 200 },
        { "YAKTAK feat. Sobol' - Погляд", 177 },
        { "Антитіла - Фортеця Бахмут", 199 },
        { "SadSvit, СТРУКТУРА ЩАСТЯ - Силуети", 173 },
        { "Без обмежень - Без неї ніяк", 282 },
        { "alyona alyona - Не втратимо зв'язок", 149 },
        { "SKOFKA - Чути гімн", 148 }
    };
    int size = sizeof(songs) / sizeof(songs[0]);

    int choice = -1;
    char target[50];
    struct Account a;
    char password2[50];

    do {
        printf("Меню:\n");
        printf("1) Створення аккаунта\n");
        printf("2) Список доступних пісень\n");
        printf("3) Пошук музики за назвою\n");
        printf("4) Виведення даних про аккаунт\n");
        printf("5) Видалення аккаунта\n");
        printf("6) Вихід з програми\n");

        bool check = true;

        do {
            printf("Виберіть опцію: ");

            // Перевірка на коректне введення
            if (scanf("%d", &choice) != 1) {
                printf("\nПомилкове введення. Спробуйте знову\n");

                // Очищення буферу вводу
                while (getchar() != '\n');

                // Продовження циклу з нового кроку
                continue;
            } else {
                check = false;
            }

        } while (check);

        switch (choice) {
            case 1:
                RegistringAccount(&a);
                break;
            case 2:
                MusicList(songs, size);
                break;
            case 3:
                printf("Введіть назву пісні або ім'я автора: ");
                scanf(" %[^\n]", target);
                MusicSearch(songs, size, target);
                break;
            case 4:
                AccountData(&a);
                break;
            case 5:
                Delete_Account(&a, password2);
                break;
            case 6:
                printf("Програма завершена.\n");
                break;
            default:
                printf("Невірний вибір. Спробуйте ще раз.\n");
                break;
        }
    } while (choice != 6);

    return 0;
}
